name: Rust Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Check for errors
      uses: actions-rs/cargo@v1
      with:
        command: check

    - name: Build
      if: ${{ success() }}
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: Run tests
      if: ${{ success() }}
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Cache
      uses: Swatinem/rust-cache@v1

  additional:
    name: Additional Verification
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy

    - name: Run linter
      uses: actions-rs/cargo@v1
      with:
        command: clippy

    - name: Check outdated dependencies
      run: cargo install cargo-outdated && cargo outdated -R

    - name: Look for security vulnerabilities
      run: cargo install cargo-audit && cargo audit

    - name: Check license compatibility
      run: cargo install cargo-lichking && cargo lichking check

  lint-dependencies:
    name: Lint Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Lint dependencies
      uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}

  lint-dotenv:
    name: Lint .env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Lint .env
        uses: dotenv-linter/action-dotenv-linter@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: Actions
          dotenv_linter_flags: --skip UnorderedKey
